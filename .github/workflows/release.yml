# .github/workflows/release.yml
name: Create Release Executable

# Controls when the workflow will run
on:
  push:
    branches: [ main ] # Trigger workflow on pushes to the main branch

jobs:
  build-and-release:
    runs-on: windows-latest # Use a Windows runner to build the .exe

    steps:
      # 1. Checkout the repository code
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Fetch all history for GitVersion to work correctly

      # 2. Setup .NET SDK (Update version if needed)
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x' # Use the .NET version your project targets

      # 3. Install and run GitVersion to determine the version
      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v1.1.1
        with:
          versionSpec: '5.x'

      - name: Determine Version
        id: gitversion # Set an ID to reference outputs
        uses: gittools/actions/gitversion/execute@v1.1.1

      # 4. Restore dependencies (Good practice before build/test)
      - name: Restore dependencies
        run: dotnet restore

      # 5. Run Tests (Added Step)
      # This will run tests for all projects in the solution found by 'dotnet test'
      # It uses the Release configuration to match the publish step.
      - name: Run Tests
        run: dotnet test --configuration Release --no-restore # Use --no-restore as dependencies were just restored

      # 6. Build and Publish the application (Only runs if tests pass)
      - name: Publish Application
        # Using the corrected project path based on your selection
        run: |
          dotnet publish ./src/HardlineProphet.Cli/HardlineProphet.csproj `
            -c Release `
            --runtime win-x64 `
            --self-contained true `
            -p:PublishSingleFile=true `
            -p:Version=${{ steps.gitversion.outputs.assemblySemVer }} `
            -o ./publish `
            --no-restore # Dependencies were restored earlier
        # ... (options explanation) ...

      # 7. Create GitHub Release and Upload Artifact (Only runs if publish succeeds)
      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.gitversion.outputs.majorMinorPatch }}
          name: Release v${{ steps.gitversion.outputs.majorMinorPatch }}
          body: |
            Release based on commit ${{ github.sha }}
            Version: ${{ steps.gitversion.outputs.semVer }}
            Full SemVer: ${{ steps.gitversion.outputs.fullSemVer }}
          draft: false
          prerelease: ${{ steps.gitversion.outputs.isPreRelease }}
          # Using the corrected executable name based on your selection
          files: ./publish/HardlineProphet.exe

